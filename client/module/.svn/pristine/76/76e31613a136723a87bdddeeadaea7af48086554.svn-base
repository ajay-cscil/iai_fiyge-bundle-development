<?php
 /**
  *
  * Dont write any custom code in this class, build operation will overwrite this class;
  */
  namespace module\leave_management\model;
  class leave_allocations extends \module\leave_management\model\leave_allocations_domain_logic
  {
       public $source = 'default';
       public $table = 'leave_management__leave_allocations';
       public $parentClass = '\\data_model';
       public $displayField = 'name';
       public $primaryKey = 'id';
       public $alias = 'leave_allocations';
       public $softDeleteColumn = 'deleted';
       public $sequenceColumnName = 'seq';
       public $isSequentialData = '0';
       public $isConfig = '0';
       public $overrideCallToParent = '0';
       public $fields = array (
  'allocation' => 
  array (
    'column' => 'allocation',
    'ntype' => 'float',
    'length' => '10,2',
  ),
  'created' => 
  array (
    'column' => 'created',
    'ntype' => 'datetime',
  ),
  'created_by' => 
  array (
    'column' => 'created_by',
    'ntype' => 'int',
    'length' => '19',
  ),
  'deleted' => 
  array (
    'column' => 'deleted',
    'ntype' => 'int',
    'length' => '1',
  ),
  'department_id' => 
  array (
    'column' => 'department_id',
    'ntype' => 'int',
    'length' => '11',
  ),
  'name' => 
  array (
    'column' => 'name',
    'ntype' => 'string',
    'length' => '255',
    'is_sortable' => '0',
    'is_searchable' => '0',
  ),
  'employee_id' => 
  array (
    'column' => 'employee_id',
    'ntype' => 'int',
    'length' => '11',
  ),
  'flags' => 
  array (
    'column' => 'flags',
    'ntype' => 'int',
    'length' => '19',
  ),
  'id' => 
  array (
    'column' => 'id',
    'ntype' => 'int',
    'length' => '11',
  ),
  'leave_type_id' => 
  array (
    'column' => 'leave_type_id',
    'ntype' => 'int',
    'length' => '11',
  ),
  'modified' => 
  array (
    'column' => 'modified',
    'ntype' => 'datetime',
  ),
  'modified_by' => 
  array (
    'column' => 'modified_by',
    'ntype' => 'int',
    'length' => '19',
  ),
  'owned_by' => 
  array (
    'column' => 'owned_by',
    'ntype' => 'int',
    'length' => '19',
  ),
  'reason' => 
  array (
    'column' => 'reason',
    'ntype' => 'string',
  ),
  'revision' => 
  array (
    'column' => 'revision',
    'ntype' => 'int',
    'length' => '19',
  ),
  'description' => 
  array (
    'column' => 'description',
    'ntype' => 'string',
    'length' => '255',
  ),
  '_acl' => 
  array (
    'column' => '_acl',
    'ntype' => 'string',
    'is_sortable' => '0',
    'is_searchable' => '0',
  ),
  '_acl_tmp' => 
  array (
    'column' => '_acl_tmp',
    'ntype' => 'string',
    'is_sortable' => '0',
    'is_searchable' => '0',
  ),
  '_acl_edit' => 
  array (
    'column' => '_acl_edit',
    'ntype' => 'string',
    'is_sortable' => '0',
    'is_searchable' => '0',
  ),
  '_acl_delete' => 
  array (
    'column' => '_acl_delete',
    'ntype' => 'string',
    'is_sortable' => '0',
    'is_searchable' => '0',
  ),
  '_acl_tmp_edit' => 
  array (
    'column' => '_acl_tmp_edit',
    'ntype' => 'string',
    'is_sortable' => '0',
    'is_searchable' => '0',
  ),
  '_acl_tmp_delete' => 
  array (
    'column' => '_acl_tmp_delete',
    'ntype' => 'string',
    'is_sortable' => '0',
    'is_searchable' => '0',
  ),
);
       public $associations = array (
  'config_departments' => 
  array (
    'assocType' => 'belongsTo',
    'className' => '\\module\\access_controls\\model\\config_departments',
    'foreignKey' => 'department_id',
    'associationAlias' => 'config_departments',
  ),
  'employees' => 
  array (
    'assocType' => 'belongsTo',
    'className' => '\\module\\hr\\model\\employees',
    'foreignKey' => 'employee_id',
    'associationAlias' => 'employees',
  ),
  'leave_type' => 
  array (
    'assocType' => 'belongsTo',
    'className' => '\\module\\leave_management\\model\\leave_type',
    'foreignKey' => 'leave_type_id',
    'associationAlias' => 'leave_type',
  ),
  'created_by_user' => 
  array (
    'className' => '\\module\\access_controls\\model\\users',
    'assocType' => 'belongsTo',
    'foreignKey' => 'created_by',
    'associationAlias' => 'created_by_user',
  ),
  'modified_by_user' => 
  array (
    'className' => '\\module\\access_controls\\model\\users',
    'assocType' => 'belongsTo',
    'foreignKey' => 'modified_by',
    'associationAlias' => 'modified_by_user',
  ),
  'owned_by_user' => 
  array (
    'className' => '\\module\\access_controls\\model\\users',
    'assocType' => 'belongsTo',
    'foreignKey' => 'owned_by',
    'associationAlias' => 'owned_by_user',
  ),
);
       public $behaviours = array (
  '\\module\\flexflow\\behaviour\\flexflow' => 
  array (
    'name' => '\\module\\flexflow\\behaviour\\flexflow',
  ),
  '\\module\\access_controls\\behaviour\\acl' => 
  array (
    'name' => '\\module\\access_controls\\behaviour\\acl',
    'readAccess' => '4',
    'editAccess' => '4',
    'deleteAccess' => '4',
    'ownAcl' => '1',
    'cacheClass' => '1',
    'lazyAclCheck' => '1',
    'recursion' => '1',
    'groupClass' => '\\module\\access_controls\\model\\groups',
    'userClass' => '\\module\\access_controls\\model\\users',
    'groupuserClass' => '\\module\\access_controls\\model\\groups_users',
    'containGroupsClass' => '\\module\\access_controls\\model\\group_contain_groups',
    'groupUserClass' => '\\module\\access_controls\\model\\groups_users',
  ),
);
       public $filters = array (
  'description' => 
  array (
    0 => 
    array (
      'rule' => 1024,
      'params' => 
      array (
        'options' => 
        array (
          0 => '\\tushar\\validation',
          1 => 'notEmpty',
        ),
      ),
    ),
  ),
  'employee_id' => 
  array (
    0 => 
    array (
      'rule' => 1024,
      'params' => 
      array (
        'options' => 
        array (
          0 => '\\tushar\\validation',
          1 => 'notEmpty',
        ),
      ),
    ),
  ),
  'leave_type_id' => 
  array (
    0 => 
    array (
      'rule' => 1024,
      'params' => 
      array (
        'options' => 
        array (
          0 => '\\tushar\\validation',
          1 => 'notEmpty',
        ),
      ),
    ),
  ),
  'name' => 
  array (
    0 => 
    array (
      'rule' => 1024,
      'params' => 
      array (
        'options' => 
        array (
          0 => '\\tushar\\validation',
          1 => 'notEmpty',
        ),
      ),
    ),
  ),
);
  }