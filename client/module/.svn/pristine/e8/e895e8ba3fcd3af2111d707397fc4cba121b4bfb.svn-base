<?php

/**
 *
 * write any custom code in this class, build operation wont overwrite this class once generated;
 */

namespace module\accounting\model;

class cheques_domain_logic extends \tushar\model{

    public function journalEntryDate(){
        return $this->data['expense_date'];
    }
    
    public function journalEntries(&$journalEntry) {
        $journalEntry['journal_entry_lines'] = array();
        //if (isset($this->data['action']) && strcasecmp($this->data['action'], 'validate') == 0) {
        $actionTriggred = "";
        if (is_array($this->data['action'])) {
            $actionTriggred = key($this->data['action']);
        } else {
            $actionTriggred = $this->data['action'];
        }
        if (strcasecmp($actionTriggred, 'validate') == 0) {

            $journalEntry['journal_type'] = 'purchase';
            if (!isset($journalEntry['company_id']) || empty($journalEntry['company_id'])) {
                $journalEntry['company_id'] = \tushar\user::read('company_id');
            }
            $journalEntry['currency_id'] = (isset($this->data['currency_id']) ? $this->data['currency_id'] : '');
            if (!isset($journalEntry['currency_id']) || empty($journalEntry['currency_id'])) {
                $journalEntry['currency_id'] = \tushar\user::read('currency_id');
            }
            $journalEntry['journal_id'] = \module\accounting\model\journals::getInstance()->journalID($journalEntry['journal_type'], $journalEntry['currency_id'], $journalEntry['company_id']);
            /*
              cheques.account_id
              cheques.account_id
              cheques.total
              credit
              posted
              validate
             */

            $journalEntry['journal_entry_lines'][] = array(
                'related_to' => '',
                '__related_to' => '',
                'related_to_model' => '',
                'related_to_model_class' => '',
                'account_id' => $this->data['account_id'],
                'credit' => $this->data['total']
            );




            /*
              cheques.cheque_lines.account_id
              cheques.cheque_lines.account_id
              cheques.cheque_lines.cheque_amount
              debit
              posted
              validate
             */

            if (isset($this->data['cheque_lines']) && is_array($this->data['cheque_lines'])) {
                $object = $this->cheque_lines;
                foreach ($this->data['cheque_lines'] as $line) {
                    if (!isset($line['deleted']) || $line['deleted'] != 1) {
                        $journalEntry['journal_entry_lines'][] = array(
                            'related_to' => '',
                            '__related_to' => '',
                            'related_to_model' => '',
                            'related_to_model_class' => '',
                            'account_id' => $line['account_id'],
                            'debit' => $line['cheque_amount']
                        );
                    }
                }
            }




            /*
              cheques.cheque_item_lines.products.product_accounts.expense_account_id
              cheques.cheque_item_lines.product_id
              cheques.cheque_item_lines.total_amount
              debit
              posted
              validate
             */

            if (isset($this->data['cheque_item_lines']) && is_array($this->data['cheque_item_lines'])) {
                $object = $this->cheque_item_lines->products;
                foreach ($this->data['cheque_item_lines'] as $line) {
                    if (!isset($line['deleted']) || $line['deleted'] != 1) {
                        $journalEntry['journal_entry_lines'][] = array(
                            'related_to' => $line['product_id'],
                            '__related_to' => \select("{$object->displayField}")
                                    ->from($object)
                                    ->where("{$object->alias}.id", $line['product_id'])
                                    ->execute()->fetch(\PDO::FETCH_COLUMN, 0),
                            'related_to_model' => $object->alias,
                            'related_to_model_class' => $object->modelClass,
                            'account_id' => \select("product_accounts.expense_account_id")
                                    ->from($object)
                                    ->joinInner('product_accounts')
                                    ->where("{$object->alias}.id", $line['product_id'])
                                    ->execute()
                                    ->fetch(\PDO::FETCH_COLUMN, 0),
                            'debit' => $line['total_amount']
                        );
                    }
                }
            }

            return true;
        }
    }

}