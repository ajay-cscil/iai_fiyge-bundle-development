[
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": null,
        "created": "2013-08-07 10:51:26",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": "afterProcessData",
        "filter_path": "\/module\/accounting\/model\/journal_entries",
        "id": "52611f7e-e4f8-42fd-8b10-1d890acef1b9",
        "if_condition": "!isset($object->data['date']) || empty($object->data['date'])",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-01-18 01:41:16",
        "modified_by": "1",
        "module_id": "2726306c-e746-11e3-aad5-0800275f9930",
        "name": "Prepopulate Accounting\/Entries",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "5",
        "stage_id": null,
        "then_condition": "$object->data['date']=\\tushar\\locale::systemDate();\r\n$info=\\select(array(\"periods.id\",\"periods.name\") )\r\n->from(\\module\\accounting\\model\\periods::getInstance())\r\n->join('fiscal_years')\r\n->inserted()\r\n->where(array('start_of_period <= '=>  $object->data['date'], \r\n'end_of_period >= ' =>  $object->data['date'] ,\r\n'company_id'=>\\tushar\\user::read('company_id') ) )\r\n->limit(1)\r\n->execute()\r\n->fetch(\\PDO::FETCH_ASSOC);\r\n\r\nif(!empty($info)){\r\n      $object->data['__period_id'] = $info['name'];\r\n      $object->data['period_id'] = $info['id'];\r\n}\r\n\r\n$object->data['status_id']=$object->{'journal_entry_status'}->readBusinessKey('draft');\r\nif(!empty($object->data['status_id'])){\r\n      $object->data['__status_id'] ='Draft';\r\n}"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "94",
        "created": "2014-03-31 23:30:23",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/accounting\/model\/journal_entries",
        "id": "5339fa8f-d59c-4b20-905e-3f280af91b9d",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "2726306c-e746-11e3-aad5-0800275f9930",
        "name": "Validate",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "\/\/ if not set, then set draft as current node.\r\n        \/\/  log is empty\r\n        if (!$object->isLogSet()) {\r\n            \/\/  set nodes\r\n            $object->setWorkflowLog(array(array('can_edit' => 1, 'foreign_key' => \\tushar\\user::read('id'), 'foreign_key_model' => 'users')));\r\n        }\r\n        \/\/  then set draft as current node.->invoke enter event for current stage\r\n        $node = $object->node($object->nodeID());\r\n        \/\/ check if node is valid and exists in log.\r\n        if ($node['status'] == 'open') {\r\n            $object->logAction($node['id']);\r\n            \/\/ exit current stage\r\n            $object->exitNode();\r\n        }"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "116",
        "created": "2014-03-31 23:32:10",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/accounting\/model\/journal_entries",
        "id": "5339fafa-c394-428c-8f20-3e290af91b9d",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "2726306c-e746-11e3-aad5-0800275f9930",
        "name": "Void",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    }
]