[
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "79",
        "created": "2014-01-09 23:21:42",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_orders",
        "id": "52cf2f06-60e4-4935-bedb-52970ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-04-04 00:04:58",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Confirm PO",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "\/\/ if not set, then set draft as current node.\r\n        \/\/  log is empty\r\n        if (!$object->isLogSet()) {\r\n            \/\/  set nodes\r\n            $object->setWorkflowLog(array(array('can_edit' => 1, 'foreign_key' => \\tushar\\user::read('id'), 'foreign_key_model' => 'users')));\r\n        }\r\n        \/\/  then set draft as current node.->invoke enter event for current stage\r\n        $node = $object->node($object->nodeID());\r\n        \/\/ check if node is valid and exists in log.\r\n        $dataOrder=$object->data['entity'];\r\n        if(is_array($dataOrder)){\r\n           $poObject=\\module\\stock\\model\\inbound_shipments::getInstance();\r\n           $dataOrder['purchase_order_id']=$dataOrder['id'];\r\n           $dataOrder=array_diff_key($dataOrder,\r\n           array($poObject->primaryKey=>1,\r\n           'status'=>1,\r\n           '_acl'=>1,\r\n           '_acl_edit'=>1,\r\n           '_acl_delete'=>1));\r\n           if(isset($dataOrder['config_purchase_order_lines']) && is_array($dataOrder['config_purchase_order_lines'])){\r\n               $dataOrder['config_inbound_shipment_lines']=array();\r\n               foreach($dataOrder['config_purchase_order_lines'] as $line){\r\n                   if(!(isset($line['deleted']) && $line['deleted'] == 1)){\r\n                      unset($line['id']);\r\n                      if(isset($line['line_taxes']) && is_array($line['line_taxes'])){\r\n                foreach($line['line_taxes'] as $k=>$v){\r\n                     $line['line_taxes'][$k]=array_diff_key($v,array('id'=>1,'related_to'=>1,'related_to_model'=>1,'__related_to'=>1));\r\n                }\r\n              }\r\n                      $dataOrder['config_inbound_shipment_lines'][]=$line;       \r\n                   }\r\n               }\r\n               unset($dataOrder['config_purchase_order_lines']);\r\n           }\r\n          if(isset($dataOrder['line_taxes_summary']) && is_array($dataOrder['line_taxes_summary'])){\r\n        foreach($dataOrder['line_taxes_summary'] as $k=>$v){\r\n            $dataOrder['line_taxes_summary'][$k]=array_diff_key($v,array('id'=>1,'related_to'=>1,'related_to_model'=>1,'__related_to'=>1));\r\n        }\r\n    }\r\n           $dataOrder['action'] = array('draft'=>'draft');\r\n           if($poObject->save($dataOrder,array('atomic'=>true, 'validate'=>FALSE))){\r\n               $object->exitNode();\r\n           }    \r\n        }\r\n"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "81",
        "created": "2014-01-10 00:14:58",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_orders",
        "id": "52cf3b83-1720-4114-976d-57150ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-04-04 22:25:01",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Received & Invoice",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$dataOrder=$object->data['entity'];\r\nif(is_array($dataOrder)){\r\n   $poObject=\\module\\accounting\\model\\invoices::getInstance();\r\n   \/\/ @todo PO ID source link to be fixed once field is generated\r\n   $dataOrder['related_to']=$dataOrder['id'];\r\n   $dataOrder['__related_to']=$dataOrder['number'];\r\n   $dataOrder['related_to_model']='purchase_orders';\r\n    $dataOrder['partner_id']=$dataOrder['account_id'];\r\n    $dataOrder['invoice_date']=date('Y-m-d H:i:s');\r\n   $dataOrder['due_date']=$dataOrder['required_date'];\r\n   $dataOrder['balance_due']=$dataOrder['total_after_discount'];\r\n   if ((array_key_exists('name',$dataOrder)) && (empty($dataOrder['name']))){\r\n    $inv_name = 'Invoice for Purchase Order#'.$dataOrder['number'];\r\n    $dataOrder['name']=$inv_name;\r\n   }\r\n   $dataOrder=array_diff_key($dataOrder,\r\n   array($poObject->primaryKey=>1,\r\n   'status'=>1,\r\n   '_acl'=>1,\r\n   '_acl_edit'=>1,\r\n   '_acl_delete'=>1));\r\n   if(isset($dataOrder['config_purchase_order_lines']) && is_array($dataOrder['config_purchase_order_lines'])){\r\n       $dataOrder['invoice_lines']=array();\r\n       foreach($dataOrder['config_purchase_order_lines'] as $line){\r\n           if(!(isset($line['deleted']) && $line['deleted'] == 1)){\r\n              unset($line['id']);\r\n              if(isset($line['line_taxes']) && is_array($line['line_taxes'])){\r\n                foreach($line['line_taxes'] as $k=>$v){\r\n                     $line['line_taxes'][$k]=array_diff_key($v,array('id'=>1,'related_to'=>1,'related_to_model'=>1,'__related_to'=>1));\r\n                }\r\n              }\r\n              $dataOrder['invoice_lines'][]=$line;       \r\n           }\r\n       }\r\n       unset($dataOrder['config_purchase_order_lines']);\r\n   }\r\n   if(isset($dataOrder['line_taxes_summary']) && is_array($dataOrder['line_taxes_summary'])){\r\n        foreach($dataOrder['line_taxes_summary'] as $k=>$v){\r\n            $dataOrder['line_taxes_summary'][$k]=array_diff_key($v,array('id'=>1,'related_to'=>1,'related_to_model'=>1,'__related_to'=>1));\r\n        }\r\n    }\r\n   $dataOrder['action'] = array('draft'=>'draft');\r\n   if($poObject->save($dataOrder,array('atomic'=>true, 'validate'=>FALSE))){\r\n       $object->exitNode();\r\n   }    \r\n}"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "82",
        "created": "2014-01-13 17:28:17",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_orders",
        "id": "52d42231-c94c-44cb-86e5-788a0ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Invoiced",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "80",
        "created": "2014-01-10 00:14:12",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_orders",
        "id": "52cf3b54-4094-4dab-9c48-59580ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": "245",
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-02-18 13:23:16",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Generate Shipment",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "2",
        "rgt": "246",
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    }
]