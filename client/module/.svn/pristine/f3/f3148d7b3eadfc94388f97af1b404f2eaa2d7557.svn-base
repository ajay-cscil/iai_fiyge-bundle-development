[
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "83",
        "created": "2014-01-09 23:50:21",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "52cf35bd-3d8c-44d8-b106-568b0ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-01-13 15:10:26",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Saved PQ",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "if (!$object->isLogSet()) {\r\n    if ($object->setWorkflowLog(array(array('can_edit' => 1, 'foreign_key' => \\tushar\\user::read('id'), 'foreign_key_model' => 'users'))) === false) {\r\n        throw new \\Exception(sprintf(__('Could not initialize workflow log as draft stage not found for this workflow type')));\r\n    }\r\n}"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "84",
        "created": "2014-01-09 23:55:07",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "52cf36db-61f4-4688-8d82-57150ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Send for Approval PQ",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "85",
        "created": "2014-01-09 23:57:16",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "52cf375c-2f48-42fa-9d51-562d0ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Approve PQ",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "86",
        "created": "2014-01-10 00:11:14",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "52cf3aa2-e3dc-4971-b38a-587e0ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Save PO",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "78",
        "created": "2014-01-10 14:28:39",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "52d00397-0d8c-4c3e-8259-1dba0ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-04-04 00:02:09",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Convert to PO",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$dataQuote=$object->data['entity'];\r\nif(is_array($dataQuote)){\r\n   $poObject=\\module\\purchase\\model\\purchase_orders::getInstance();\r\n   $dataQuote['purchase_quote_id']=$dataQuote['id'];\r\n   \/\/$dataQuote['request_delivery']=date('Y-m-d H:i:s');\r\n   \/\/$dataQuote['delivery_date']=date(\"Y-m-d H:i:s\", strtotime(\"+ 10 day\"));\r\n   $dataQuote=array_diff_key($dataQuote,\r\n   array($poObject->primaryKey=>1,\r\n   'status'=>1,\r\n   '_acl'=>1,\r\n   '_acl_edit'=>1,\r\n   '_acl_delete'=>1));\r\n   if(isset($dataQuote['config_purchase_quote_lines']) && is_array($dataQuote['config_purchase_quote_lines'])){\r\n       $dataQuote['config_purchase_order_lines']=array();\r\n       foreach($dataQuote['config_purchase_quote_lines'] as $line){\r\n           if(!(isset($line['deleted']) && $line['deleted'] == 1)){\r\n              unset($line['id']);\r\n              if(isset($line['line_taxes']) && is_array($line['line_taxes'])){\r\n                foreach($line['line_taxes'] as $k=>$v){\r\n                     $line['line_taxes'][$k]=array_diff_key($v,array('id'=>1,'related_to'=>1,'related_to_model'=>1,'__related_to'=>1));\r\n                }\r\n              }\r\n              $dataQuote['config_purchase_order_lines'][]=$line;       \r\n           }\r\n       }\r\n       unset($dataQuote['config_purchase_quote_lines']);\r\n   }\r\n   if(isset($dataQuote['line_taxes_summary']) && is_array($dataQuote['line_taxes_summary'])){\r\n        foreach($dataQuote['line_taxes_summary'] as $k=>$v){\r\n            $dataQuote['line_taxes_summary'][$k]=array_diff_key($v,array('id'=>1,'related_to'=>1,'related_to_model'=>1,'__related_to'=>1));\r\n        }\r\n    }\r\n   $dataQuote['action'] = array('draft'=>'draft');\r\n   if($poObject->save($dataQuote,array('atomic'=>true, 'validate'=>FALSE))){\r\n       $object->exitNode();\r\n   }    \r\n}"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "87",
        "created": "2014-01-10 14:56:40",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "52d00a28-dda8-4ba8-a85e-20e30ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-01-13 15:09:02",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Submit for Approval PQ",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "  if (!$object->isLogSet()) {\r\n            \/\/  set nodes\r\n            $object->setWorkflowLog(array(array('can_edit' => 1, 'foreign_key' => \\tushar\\user::read('id'), 'foreign_key_model' => 'users')));\r\n        }\r\n        \/\/  then set draft as current node.->invoke enter event for current stage\r\n        $node = $object->node($object->nodeID());\r\n        \/\/ check if node is valid and exists in log.\r\n        if ($node['status'] == 'open') {\r\n            $object->logAction($node['id']);\r\n            \/\/ exit current stage\r\n            $object->exitNode();\r\n        }"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "88",
        "created": "2014-01-13 18:22:12",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "52d42ed4-ce30-40e2-9044-7e540ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-05-12 15:50:13",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Email RFQ",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$data=$object->data;\r\n\r\n\/\/ localize dates\r\n\/\/        $data['entity']['effective_from'] = \\tushar\\locale::localize($data['entity']['effective_from'],DATE);\r\n\/\/        $data['entity']['effective_to'] = \\tushar\\locale::localize($data['entity']['effective_to'],DATE);\r\n\r\n\/\/ read account details\r\n$account = current(\\module\\crm\\model\\accounts::getInstance()->read($object->data['entity']['account_id']));\r\n        $to = isset($account['email_addresses']) ? current($account['email_addresses']) : '';\r\n        if (is_array($to)) {\r\n            $to = $to['email'];\r\n        }\r\n        $data['accounts']=$account;        \r\n\/\/ read template        \r\n        $printviewObj = \\module\\core\\model\\printviews::getInstance();\r\n        $template = \\select(\"*\")->from($printviewObj)->inserted()->where('business_key', \"purchase_quotes\")->execute()->fetch(\\PDO::FETCH_ASSOC);\r\n        if (empty($template)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure printview template with key \\\"%s\\\"\",\"module\"), 'purchase_quotes'));\r\n        }\r\n        if (empty($to)) {\r\n            throw new \\Exception(__(\"Account does not have email address configured\"));\r\n        }\r\n\/\/ read email template        \r\n        \/*\r\n        $notification = \\tushar\\configuration::read('purchase_quotes');\r\n        $notification=isset($notification['request_for_quotation_email'])?$notification['request_for_quotation_email']:array();  \r\n        if (empty($notification)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure quote email to be send to client in purchase.purchase_quotes.request_for_quotation_email\",\"module\"), 'purchase'));\r\n        }*\/\r\n        \r\n        \r\n        $notificationEmail=\\module\\core\\model\\email_templates::getInstance()\r\n        ->template('request_for_quotation_email','purchase\/purchase_quotes');\r\n        if (empty($notificationEmail)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure quote email to be send to client with business key request_for_quotation_email\",\"module\"), 'purchase'));\r\n        }\r\n        $notification=array('subject'=>$notificationEmail['name'],'body'=>$notificationEmail['content']);\r\n\r\n\r\n\r\n        $pages = \\module\\core\\controller\\printviews_domain_logic::processTags($template['content']);\r\n        $companyObject =\\module\\crm_base\\model\\companies::getInstance(array(), true); \r\n        $company=current($companyObject->read(\\tushar\\user::read('company_id')));\r\n        $company['images']=\\select(\"*\")\r\n                            ->from($companyObject->images)\r\n                            ->inserted()\r\n                            ->where(\r\n                                array(\r\n                                'related_to'=>$company['id'],\r\n                                'related_to_model'=>'companies'\r\n                                )\r\n                            )->execute()\r\n                            ->fetch(\\PDO::FETCH_ASSOC);\r\n        $data['companies']=$company; \r\n\r\n\r\n\/\/ generate pdf\r\n        $filename = tempnam(TMP, \"pdf-\") . \".pdf\";\r\n        $handle = fopen($filename, \"w\");\r\n        $view = new \\tushar\\view(\\tushar\\request::getInstance());\r\n        $view->generatePDF($pages, $template, $company)->render(false, $handle);\r\n        $notification['body'] = htmlspecialchars_decode($notification['body']);\r\n$data['users']=\\tushar\\user::readAll();\r\n\/\/ compose email\r\n        $email = array(\r\n            'attachments' => array(array('mime_type' => 'application\/pdf', 'error' => 0, 'tmp_name' => $filename, 'name' => 'RFQ.pdf'))\r\n            , 'subject' => $notification['subject']\r\n            , 'body' => $notification['body']\r\n            , 'email_to_recipients' => $to\r\n        );\r\n        if (\\tushar\\user::read('id') == false) {\r\n            $email['from_name'] = \\tushar\\configuration::read('administrator_name');\r\n            $email['from_email'] = \\tushar\\configuration::read('administrator_email');\r\n        }\r\n        \r\n        \/\/ process merge words in email subject\r\n        $array = \\tushar\\string::split($email['subject'], array(\"merge_words\" => \"\/\\{\\{[\\.\\w\\-]*\\}\\}\/i\"));\r\n        list($strings, $extracts) = $array;\r\n        if (isset($extracts['merge_words']) && is_array($extracts['merge_words'])) {\r\n            $extracts['merge_words'] = \\tushar\\string::cleanWords($extracts['merge_words']);\r\n            $extracts['merge_words'] = \\tushar\\string::populateWords($extracts['merge_words'], $data);\r\n            $email['subject'] = \\tushar\\string::merge($strings, $extracts);\r\n        }\r\n        \r\n        \/\/ process merge words in email body\r\n        $array = \\tushar\\string::split($email['body'], array(\"merge_words\" => \"\/\\{\\{[\\.\\w\\-]*\\}\\}\/i\"));\r\n        list($strings, $extracts) = $array;\r\n        if (isset($extracts['merge_words']) && is_array($extracts['merge_words'])) {\r\n            $extracts['merge_words'] = \\tushar\\string::cleanWords($extracts['merge_words']);\r\n            $extracts['merge_words'] = \\tushar\\string::populateWords($extracts['merge_words'], $data);\r\n            $email['body'] = \\tushar\\string::merge($strings, $extracts);\r\n        }\r\n        \/\/ send email\r\n        $emailObj = \\module\\activities\\model\\emails::getInstance();\r\n        $emailObj->attachments->moveFile = false;\r\n        \r\n        $email = $emailObj->saveAndSend($email, array('atomic' => true, 'validate' => false));\r\n        fclose($handle);\r\n        unlink($filename);\r\n"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": null,
        "created": "2014-03-20 20:23:43",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": "beforeSave",
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "532b4e4f-35b8-4ce0-8b66-0c6aac1006a4",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-03-20 21:19:37",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Valid Till Purchase Quotes",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$Validtill=$object->data;\r\n\r\n\r\nif ((isset($Validtill['order_date']) && isset($Validtill['required_date']) || (!empty($Validtill['order_date']) && !empty($Validtill['required_date']))) && $Validtill['order_date']>$Validtill['required_date']) {\r\nthrow new \\Exception('Required date should be greater than Order Date');\r\n}\r\nif ((isset($Validtill['required_date']) && isset($Validtill['valid_date']) || (!empty($Validtill['required_date']) && !empty($Validtill['valid_date']))) && $Validtill['required_date']>$Validtill['valid_date']) {\r\nthrow new \\Exception('Valid Until should be greater than Required Date');\r\n}\r\n\r\n"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "113",
        "created": "2014-03-12 18:06:04",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "5320a20c-40d8-4bda-b1e6-28e3ac100612",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": "163",
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-03-12 18:06:22",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Deny Quotes",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "2",
        "rgt": "164",
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "95",
        "created": "2014-01-17 17:49:31",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/purchase\/model\/purchase_quotes",
        "id": "52d96d2b-1120-473c-baca-58d90ac22bdf",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": "167",
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-01-17 17:54:26",
        "modified_by": "1",
        "module_id": "27263e01-e746-11e3-aad5-0800275f9930",
        "name": "Resubmit for Approval",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "2",
        "rgt": "168",
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    }
]