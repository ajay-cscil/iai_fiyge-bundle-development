[
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "43",
        "created": "2013-11-28 22:13:42",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "5297c016-5608-402e-b034-54b90a550b97",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-09-11 20:08:39",
        "modified_by": "1",
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Sent",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();\r\n$data=$object->data;\r\n\r\n\/\/ localize dates\r\n        $data['entity']['effective_from'] = \\tushar\\locale::localize($data['entity']['effective_from'],DATE);\r\n        $data['entity']['effective_to'] = \\tushar\\locale::localize($data['entity']['effective_to'],DATE);\r\n\r\n\/\/ read account details\r\n$account = current(\\module\\crm\\model\\accounts::getInstance()->read($object->data['entity']['account_id']));\r\n        $to = (\r\n            isset($account['email_addresses']) && isset($account['email_addresses'][0]) \r\n            ? $account['email_addresses'][0] : ''\r\n            );\r\n        if (is_array($to)) {\r\n            $to = $to['email'];\r\n        }\r\n        $data['accounts']=$account;        \r\n\/\/ read template        \r\n        $printviewObj = \\module\\core\\model\\printviews::getInstance();\r\n        $template = \\select(\"*\")->from($printviewObj)->inserted()->where('business_key', \"quotes\")->execute()->fetch(\\PDO::FETCH_ASSOC);\r\n        if (empty($template)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure printview template with key \\\"%s\\\"\",\"module\"), 'quotes'));\r\n        }\r\n        if (empty($to)) {\r\n            throw new \\Exception(__(\"Account does not have email address configured\"));\r\n        }\r\n\/\/ read email template        \r\n        \/*\r\n        $notification = \\tushar\\configuration::read('quotes');\r\n        $notification=isset($notification['send_quote_to_client_email'])?$notification['send_quote_to_client_email']:array();  \r\n        if (empty($notification)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure quote email to be send to client in sales.quotes.send_quote_to_client_email\",\"module\"), 'quotes'));\r\n        }*\/\r\n        \r\n        $notificationEmail=\\module\\core\\model\\email_templates::getInstance()\r\n        ->template('send_quote_to_client_email','sales\/quotes');\r\n        if (empty($notificationEmail)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure quote email to be send to client with business key send_quote_to_client_email\",\"module\"), 'quotes'));\r\n        }\r\n        $notification=array('subject'=>$notificationEmail['name'],'body'=>$notificationEmail['content']);\r\n\r\n        $pages = \\module\\core\\controller\\printviews_domain_logic::processTags($template['content']);\r\n        $companyObject =\\module\\crm_base\\model\\companies::getInstance(array(), true); \r\n        $company=current($companyObject->read(\\tushar\\user::read('company_id')));\r\n        $company['images']=\\select(\"*\")\r\n                            ->from($companyObject->images)\r\n                            ->inserted()\r\n                            ->where(\r\n                                array(\r\n                                'related_to'=>$company['id'],\r\n                                'related_to_model'=>'companies'\r\n                                )\r\n                            )->execute()\r\n                            ->fetch(\\PDO::FETCH_ASSOC);\r\n        $data['companies']=$company; \r\n\r\n\r\n\/\/ generate pdf\r\n        $filename = tempnam(TMP, \"pdf-\") . \".pdf\";\r\n        $handle = fopen($filename, \"w\");\r\n        $view = new \\tushar\\view(\\tushar\\request::getInstance());\r\n        $view->generatePDF($pages, $template, $company)->render(false, $handle);\r\n        $notification['body'] = htmlspecialchars_decode($notification['body']);\r\n$data['users']=\\tushar\\user::readAll();\r\n\/\/ compose email\r\n        $email = array(\r\n            'attachments' => array(array('mime_type' => 'application\/pdf', 'error' => 0, 'tmp_name' => $filename, 'name' => 'Quotes.pdf'))\r\n            , 'subject' => $notification['subject']\r\n            , 'body' => $notification['body']\r\n            , 'email_to_recipients' => $to\r\n        );\r\n        if (\\tushar\\user::read('id') == false) {\r\n            $email['from_name'] = \\tushar\\configuration::read('administrator_name');\r\n            $email['from_email'] = \\tushar\\configuration::read('administrator_email');\r\n        }\r\n        \r\n        \/\/ process merge words in email subject\r\n        $array = \\tushar\\string::split($email['subject'], array(\"merge_words\" => \"\/\\{\\{[\\.\\w\\-]*\\}\\}\/i\"));\r\n        list($strings, $extracts) = $array;\r\n        if (isset($extracts['merge_words']) && is_array($extracts['merge_words'])) {\r\n            $extracts['merge_words'] = \\tushar\\string::cleanWords($extracts['merge_words']);\r\n            $extracts['merge_words'] = \\tushar\\string::populateWords($extracts['merge_words'], $data);\r\n            $email['subject'] = \\tushar\\string::merge($strings, $extracts);\r\n        }\r\n        \r\n        \/\/ process merge words in email body\r\n        $array = \\tushar\\string::split($email['body'], array(\"merge_words\" => \"\/\\{\\{[\\.\\w\\-]*\\}\\}\/i\"));\r\n        list($strings, $extracts) = $array;\r\n        if (isset($extracts['merge_words']) && is_array($extracts['merge_words'])) {\r\n            $extracts['merge_words'] = \\tushar\\string::cleanWords($extracts['merge_words']);\r\n            $extracts['merge_words'] = \\tushar\\string::populateWords($extracts['merge_words'], $data);\r\n            $email['body'] = \\tushar\\string::merge($strings, $extracts);\r\n        }\r\n        \r\n        \/\/ send email\r\n        $emailObj = \\module\\activities\\model\\emails::getInstance();\r\n        $emailObj->attachments->moveFile = false;\r\n        \r\n        $email = $emailObj->saveAndSend($email, array('atomic' => true, 'validate' => false));\r\n        fclose($handle);\r\n        unlink($filename);\r\n"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "50",
        "created": "2013-11-28 22:17:09",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "5297c0e5-d358-4e0b-84cd-541a0a550b97",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-04-03 23:59:33",
        "modified_by": "1",
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Convert To Sales Order On Quote Submission",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": "77",
        "then_condition": "$dataQuote=$object->data['entity'];\r\nif(is_array($dataQuote)){\r\n   $soObject=\\module\\sales\\model\\sale_orders::getInstance();\r\n   $dataQuote['quote_id']=$dataQuote['id'];\r\n  \r\n   $dataQuote['request_delivery']=date('Y-m-d H:i:s');\r\n   $dataQuote['delivery_date']=date(\"Y-m-d H:i:s\", strtotime(\"+ 10 day\"));\r\n   $dataQuote=array_diff_key($dataQuote,\r\n   array($soObject->primaryKey=>1,\r\n   'status'=>1,\r\n   '_acl'=>1,\r\n   '_acl_edit'=>1,\r\n   '_acl_delete'=>1));\r\n   if(isset($dataQuote['quote_lines']) && is_array($dataQuote['quote_lines'])){\r\n       $dataQuote['sale_order_lines']=array();\r\n       foreach($dataQuote['quote_lines'] as $line){\r\n           if(!(isset($line['deleted']) && $line['deleted'] == 1)){\r\n              unset($line['id']);\r\n              if(isset($line['line_taxes']) && is_array($line['line_taxes'])){\r\n                foreach($line['line_taxes'] as $k=>$v){\r\n                     $line['line_taxes'][$k]=array_diff_key($v,array('id'=>1,'related_to'=>1,'related_to_model'=>1,'__related_to'=>1));\r\n                }\r\n              }\r\n              $dataQuote['sale_order_lines'][]=$line;       \r\n           }\r\n       }\r\n       unset($dataQuote['quote_lines']);\r\n   }\r\n    if(isset($dataQuote['line_taxes_summary']) && is_array($dataQuote['line_taxes_summary'])){\r\n        foreach($dataQuote['line_taxes_summary'] as $k=>$v){\r\n            $dataQuote['line_taxes_summary'][$k]=array_diff_key($v,array('id'=>1,'related_to'=>1,'related_to_model'=>1,'__related_to'=>1));\r\n        }\r\n    }\r\n            \r\n   \r\n   \r\n   $dataQuote['action'] = array('draft'=>'draft');\r\n   if($soObject->save($dataQuote,array('atomic'=>true, 'validate'=>FALSE))){\r\n       $object->exitNode();\r\n   }    \r\n}"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "52",
        "created": "2013-12-05 22:26:22",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "52a0fd8e-3928-4380-ba7d-78a90a550b97",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Closed Lost",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "54",
        "created": "2013-12-07 21:02:13",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "52a38cd5-6b88-4159-927d-7c110a550b97",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Approve",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "75",
        "created": "2013-12-09 21:34:04",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "52a6374c-6934-4ca0-9c6a-132a0a550b97",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-02-15 19:25:56",
        "modified_by": "1",
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Action 'send to client'",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "\/\/ if not set, then set draft as current node.\r\n        \/\/  log is empty\r\n        if (!$object->isLogSet()) {\r\n            \/\/  set nodes\r\n            $object->setWorkflowLog(array(array('can_edit' => 1, 'foreign_key' => \\tushar\\user::read('id'), 'foreign_key_model' => 'users')));\r\n        }\r\n        \/\/  then set draft as current node.->invoke enter event for current stage\r\n        $node = $object->node($object->nodeID());\r\n        \/\/ check if node is valid and exists in log.\r\n        if ($node['status'] == 'open') {\r\n            $object->logAction($node['id']);\r\n            \/\/ exit current stage\r\n            $object->exitNode();\r\n        }"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "20",
        "created": "2013-12-10 13:39:35",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "52a71997-55b0-4e1b-9a28-6fb20a550b97",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Action 'Save'",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "77",
        "created": "2013-12-24 13:37:15",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "52b98e0b-63dc-4c94-a620-19310a550b97",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-09-11 20:09:02",
        "modified_by": "1",
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Resent",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$data=$object->data;\r\n\r\n\/\/ localize dates\r\n        $data['entity']['effective_from'] = \\tushar\\locale::localize($data['entity']['effective_from'],DATE);\r\n        $data['entity']['effective_to'] = \\tushar\\locale::localize($data['entity']['effective_to'],DATE);\r\n\r\n\/\/ read account details\r\n$account = current(\\module\\crm\\model\\accounts::getInstance()->read($object->data['entity']['account_id']));\r\n        $to = (\r\n            isset($account['email_addresses']) && isset($account['email_addresses'][0]) \r\n            ? $account['email_addresses'][0] : ''\r\n            );\r\n        if (is_array($to)) {\r\n            $to = $to['email'];\r\n        }\r\n        $data['accounts']=$account;        \r\n\/\/ read template        \r\n        $printviewObj = \\module\\core\\model\\printviews::getInstance();\r\n        $template = \\select(\"*\")->from($printviewObj)->inserted()->where('business_key', \"quotes\")->execute()->fetch(\\PDO::FETCH_ASSOC);\r\n        if (empty($template)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure printview template with key \\\"%s\\\"\",\"module\"), 'quotes'));\r\n        }\r\n        if (empty($to)) {\r\n            throw new \\Exception(__(\"Account does not have email address configured\"));\r\n        }\r\n\/\/ read email template        \r\n        \/*\r\n        $notification = \\tushar\\configuration::read('quotes');\r\n        $notification=isset($notification['send_quote_to_client_email'])?$notification['send_quote_to_client_email']:array();  \r\n        if (empty($notification)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure quote email to be send to client in sales.quotes.send_quote_to_client_email\",\"module\"), 'quotes'));\r\n        }*\/\r\n    \r\n        $notificationEmail=\\module\\core\\model\\email_templates::getInstance()\r\n        ->template('send_quote_to_client_email','sales\/quotes');\r\n        if (empty($notificationEmail)) {\r\n            throw new \\Exception(sprintf(__(\"Please configure quote email to be send to client with business key send_quote_to_client_email\",\"module\"), 'quotes'));\r\n        }\r\n        $notification=array('subject'=>$notificationEmail['name'],'body'=>$notificationEmail['content']);\r\n        \r\n        \r\n\r\n        $pages = \\module\\core\\controller\\printviews_domain_logic::processTags($template['content']);\r\n        $company = current(\\module\\crm_base\\model\\companies::getInstance(array(), true)->read(\\tushar\\user::read('company_id')));\r\n$data['companies']=$company; \r\n\r\n\r\n\/\/ generate pdf\r\n        $filename = tempnam(TMP, \"pdf-\") . \".pdf\";\r\n        $handle = fopen($filename, \"w\");\r\n        $view = new \\tushar\\view(\\tushar\\request::getInstance());\r\n        $view->generatePDF($pages, $template, $company)->render(false, $handle);\r\n        $notification['body'] = htmlspecialchars_decode($notification['body']);\r\n$data['users']=\\tushar\\user::readAll();\r\n\/\/ compose email\r\n        $email = array(\r\n            'attachments' => array(array('mime_type' => 'application\/pdf', 'error' => 0, 'tmp_name' => $filename, 'name' => 'Quotes.pdf'))\r\n            , 'subject' => $notification['subject']\r\n            , 'body' => $notification['body']\r\n            , 'email_to_recipients' => $to\r\n        );\r\n        if (\\tushar\\user::read('id') == false) {\r\n            $email['from_name'] = \\tushar\\configuration::read('administrator_name');\r\n            $email['from_email'] = \\tushar\\configuration::read('administrator_email');\r\n        }\r\n        \r\n        \/\/ process merge words in email subject\r\n        $array = \\tushar\\string::split($email['subject'], array(\"merge_words\" => \"\/\\{\\{[\\.\\w\\-]*\\}\\}\/i\"));\r\n        list($strings, $extracts) = $array;\r\n        if (isset($extracts['merge_words']) && is_array($extracts['merge_words'])) {\r\n            $extracts['merge_words'] = \\tushar\\string::cleanWords($extracts['merge_words']);\r\n            $extracts['merge_words'] = \\tushar\\string::populateWords($extracts['merge_words'], $data);\r\n            $email['subject'] = \\tushar\\string::merge($strings, $extracts);\r\n        }\r\n        \r\n        \/\/ process merge words in email body\r\n        $array = \\tushar\\string::split($email['body'], array(\"merge_words\" => \"\/\\{\\{[\\.\\w\\-]*\\}\\}\/i\"));\r\n        list($strings, $extracts) = $array;\r\n        if (isset($extracts['merge_words']) && is_array($extracts['merge_words'])) {\r\n            $extracts['merge_words'] = \\tushar\\string::cleanWords($extracts['merge_words']);\r\n            $extracts['merge_words'] = \\tushar\\string::populateWords($extracts['merge_words'], $data);\r\n            $email['body'] = \\tushar\\string::merge($strings, $extracts);\r\n        }\r\n        \r\n        \/\/ send email\r\n        $emailObj = \\module\\activities\\model\\emails::getInstance();\r\n        $emailObj->attachments->moveFile = false;\r\n        \r\n        $email = $emailObj->saveAndSend($email, array('atomic' => true, 'validate' => false));\r\n        fclose($handle);\r\n        unlink($filename);\r\n"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "4",
        "created": "2014-02-20 18:02:30",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "53064336-5950-4f67-a207-472eac100612",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Deny",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": null,
        "created": "2014-02-28 15:05:02",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": "beforeSave",
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "5310a59e-f2d4-4c92-a019-2c7dac100612",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": "2014-03-13 14:39:51",
        "modified_by": "1",
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Valid till date Sales Quotes",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$Validtill=$object->data;\r\n\r\n\r\nif ((isset($Validtill['effective_from']) && isset($Validtill['effective_to']) || (!empty($Validtill['effective_from']) && !empty($Validtill['effective_to']))) && $Validtill['effective_from']>$Validtill['effective_to']) {\r\nthrow new \\Exception('Valid Till date should be greater than Quote Date');\r\n}\r\n\r\n"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "95",
        "created": "2014-03-12 17:04:54",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "532093b6-506c-4349-9e96-1047ac100612",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": null,
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Denied",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "1",
        "rgt": null,
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "113",
        "created": "2014-03-12 17:38:18",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "53209b8a-5d0c-472c-bd1d-23a3ac100612",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": "112",
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Deny Quotes",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": "52611f7e-2c34-4f91-b622-1d890acef1b9",
        "record_flags": null,
        "revision": "2",
        "rgt": "113",
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "113",
        "created": "2014-03-12 17:39:35",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "53209bd7-e6f0-45c2-b74f-239aac100612",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": "114",
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Deny Quotes",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": "52611f7e-2c34-4f91-b622-1d890acef1b9",
        "record_flags": null,
        "revision": "2",
        "rgt": "115",
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    },
    {
        "_acl": null,
        "_acl_delete": null,
        "_acl_edit": null,
        "_acl_tmp": null,
        "_acl_tmp_delete": null,
        "_acl_tmp_edit": null,
        "action_id": "113",
        "created": "2014-03-12 17:46:36",
        "created_by": "-1",
        "data_conflict": null,
        "deleted": "0",
        "description": null,
        "else_condition": null,
        "event": null,
        "filter_path": "\/module\/sales\/model\/quotes",
        "id": "53209d7c-b098-44f8-ad2d-2508ac100612",
        "if_condition": "1",
        "is_commit_pending": "0",
        "is_demo_data": "0",
        "is_public": "1",
        "is_terminal": null,
        "lft": "145",
        "md5": null,
        "message_error": null,
        "message_info": null,
        "message_warn": null,
        "modified": null,
        "modified_by": null,
        "module_id": "272638e3-e746-11e3-aad5-0800275f9930",
        "name": "Deny Quotes",
        "old_parent_id": null,
        "owned_by": "-2",
        "parent_id": null,
        "record_flags": null,
        "revision": "2",
        "rgt": "146",
        "run_once": null,
        "runlevel": "2",
        "stage_id": null,
        "then_condition": "$object->exitNode();"
    }
]